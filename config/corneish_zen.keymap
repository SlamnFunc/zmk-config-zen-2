#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <50>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

#define QWERTY   0     // QWERTY
#define COLEMAK  1     // Colemak-mod-DH
#define NUMBERS  2     // Number pad layer
#define SYMBOLS  3     // Symbols
#define ARROWS   4     // Arrows and navigation Layer under the space key

/*                KEY POSITIONS

  ╭────────────────────────╮ ╭────────────────────────╮
  │ 0   1   2   3   4   5  │ │ 6   7   8   9   10  11 │
  │ 12  13  14  15  16  17 │ │ 18  19  20  21  22  23 │
  │ 24  25  26  27  28  29 │ │ 30  31  32  33  34  35 │
  ╰───────────╮ 36  37  38 │ │ 39  40  41 ╭───────────╯
              ╰────────────╯ ╰────────────╯ */


#define COMBO(NAME, BINDINGS, KEYPOS) \
  combo_##NAME { \
    timeout-ms = <50>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <0>; \
};

combos {
  compatible = "zmk,combos";
  
  COMBO(ret1,  &kp RET,   31 32)
  COMBO(ret2,  &kp RET,   27 28)
  COMBO(ent1,  &kp RET,   30 31)
  COMBO(ent2,  &kp RET,   28 29)
  COMBO(esc,   &kp ESC,   25 26)
  COMBO(bspc,  &kp BSPC,  19 20) 
  COMBO(del,   &kp DEL,    9 10)  
  COMBO(tab,   &kp TAB,   15 16)
  COMBO(grv,   &kp GRAVE, 16 17) //Grave hold shift for Tilde
  COMBO(sqt,   &kp SQT,   32 33) //Single quote Hold shift for Double quote
  COMBO(bslh,  &kp BSLH,  33 34) //Backslash Hold shift for Pipe
  COMBO(bsp2,  &kp BSPC,   2  4)
  
  COMBO(rightbraket, &kp LBKT, 4 5) // ]
  COMBO(leftbracket, &kp RBKT, 6 7) // [ 
  
  COMBO(one,   &kp N1,     1 13)
  COMBO(two,   &kp N2,     2 14)
  COMBO(three, &kp N3,     3 15)
  COMBO(four,  &kp N4,     4 16)
  COMBO(five,  &kp N5,     5 17)
  COMBO(six,   &kp N6,     6 18)
  COMBO(seven, &kp N7,     7 19)
  COMBO(eight, &kp N8,     8 20)
  COMBO(nine,  &kp N9,     9 21)
  COMBO(zero,  &kp N0,    10 22)
  COMBO(equal, &kp EQUAL, 17 29)
  COMBO(minus, &kp MINUS, 18 30)
  };
};

/ {
  chosen {
    zmk,matrix_transform = &default_transform;
    //zmk,matrix_transform = &five_column_transform;
  };
};



/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        label = "QWERTY";
// ----------------------------------------------------------------------------------------------------------
// |   TAB  |   Q   |   W   |   E   |   R   |   T   |     |   Y   |   U    |   I   |   O   |   P   |  BKSP  |
// | CT_GRV | SHF_A | CTL_S | ALT_D | COM_F | SYM_G |     |   H   | COM_J  | ALT_K | CTL_L | SH_SC |   '    |
// |  SHFT  |   Z   |   X   |   C   |   V   |   B   |     |   N   |   M    |   ,   |   .   |   /   |  ESC   |
//                          |  NUM  |  GUI  | SHFT  |     |ArrSPC | BKSP   |  SYM  |
                        bindings = <
 &kp TAB         &kp Q        &kp W       &kp E      &kp R          &kp T        &kp Y       &kp U         &kp I      &kp O       &kp P          &kp BSPC
 &hm LCTRL GRAVE &hm LSHIFT A &hm LCTRL S &hm LALT D &hm LGUI F     &lt 3 G      &kp H       &hm RGUI J    &hm RALT K &hm RCTRL L &hm RSHFT SEMI &kp SQT
 &kp LSHFT       &kp Z        &kp X       &kp C      &kp V          &kp B        &kp N       &kp M         &kp COMMA  &kp DOT     &kp FSLH       &kp ESC
                                          &lt 2 TAB  &hm LGUI GRAVE &sk LSHIFT   &lt 4 SPACE &hm RGUI BSPC &lt 3 SQT
                        >;
                };
                colemak_layer {
                        label = "COLEMAK";
// ----------------------------------------------------------------------------------------------------------
// |   TAB  |   Q   |   W   |   F   |   P   |   B   |     |   J   |   L    |   U   |   y   |   ;   |  BKSP  |
// | CT_GRV | SHF_A | CTL_R | ALT_S | COM_T | SYM_G |     |   M   | COM_N  | ALT_E | CTL_I | SHF_O |   '    |
// |  SHFT  |   Z   |   X   |   C   |   D   |   V   |     |   K   |   H    |   ,   |   .   |   /   |  ESC   |
//                          |  NUM  |  GUI  | SHFT  |     |ArrSPC |  BKSP  | SYM ' |
                        bindings = <
 &kp TAB         &kp Q         &kp W       &kp F      &kp P          &kp B        &kp J       &kp L         &kp U      &kp Y       &kp SEMI      &kp BSPC
 &hm LCTRL GRAVE &hm LSHIFT A  &hm LCTRL R &hm LALT S &hm LGUI T     &lt 3 G      &kp M       &hm RGUI N    &hm RALT E &hm RCTRL I &hm RSHFT  O  &kp SQT
 &kp LSHFT       &kp Z         &kp X       &kp C      &kp V          &kp B        &kp N       &kp M         &kp COMMA  &kp DOT     &kp FSLH      &kp ESC
                                           &lt 2 TAB  &hm LGUI GRAVE &sk LSHIFT   &lt 4 SPACE &hm RGUI BSPC &lt 3 SQT
                        >;
                };
                lower_layer {
                        label = "NUMBER";
// ---------------------------------------------------------------------------------------------------------------
// |   TAB  | SCRSHOT | GUILBKT |  UP   | GUIRBKT | PG_UP |     |   =   |   7   |   8   |   9   |   0   |  BKSP  |
// | CT_GRV |  SHIFT  |  LEFT   |  DOWN |  RIGHT  | PG_DN |     |   +   |   4   |   5   |   6   |   -   |        |
// |  SHIFT |  FORCE  |         |       |   SPC   | BKSP  |     |   x   |   1   |   2   |   3   |   /   |        |
//                              |  NUM  |   GUI   | SHFT  |     |   0   |       |       |
                        bindings = <
 &trans &kp LG(LS(N4))  &kp LG(LBKT)   &kp UP        &kp LG(RBKT)   &kp PG_UP      &kp RET   &kp N7  &kp N8  &kp N9  &kp N0    &trans
 &trans &kp LSHFT       &mt LCTRL LEFT &mt LALT DOWN &mt LCMD RIGHT &kp PG_DN      &kp PLUS  &kp N4  &kp N5  &kp N6  &kp MINUS &trans
 &trans &kp LA(LG(ESC)) &trans         &trans        &kp SPACE      &kp BSPC       &kp STAR  &kp N1  &kp N2  &kp N3  &kp FSLH  &trans
                                       &trans        &trans         &trans         &kp N0    &trans  &trans
                        >;
                };
                raise_layer {
                        label = "SYMBOL";
// ---------------------------------------------------------------------------------------------------------
// |   TAB  |   !   |   @   |   #   |   $   |   %   |     |   ^   |   &   |   *   |   (   |   )   |  BKSP  |
// |  CTRL  |   F1  |   F2  |   F3  |   F4  |  SYM  |     |   =   |   _   |  "|"  |   [   |   ]   |   `    |
// |  SHFT  |   F5  |   F6  |   F7  |   F8  |   F9  |     |   +   |   -   |   \   |   {   |   }   |   ~    |
//                          |  F10  |  F11  |  F12  |     |  SPC  |       |  SYM  |
                        bindings = <
 &trans  &kp EXCL      &kp AT       &kp HASH    &kp DLLR    &kp PRCNT    &kp CARET &kp AMPS  &kp STAR &kp LPAR &kp RPAR &kp BSPC
 &trans  &mt LSHIFT F1 &mt LCTRL F2 &mt LALT F3 &mt LGUI F4 &trans       &kp EQUAL &kp UNDER &kp PIPE &kp LBKT &kp RBKT &kp GRAVE
 &trans  &kp F5        &kp F6       &kp F7      &kp F8      &kp F9       &kp PLUS  &kp MINUS &kp BSLH &kp LBRC &kp RBRC &kp TILDE
                                    &kp F10     &kp F11     &kp F12      &trans    &trans    &trans
                        >;
                };
                arrow_layer {
                        label = "ARROW";
// ---------------------------------------------------------------------------------------------------------
// |        | BTCLR |       |KC_SLCK|KC_PAUS| BRI_UP|     | VOL_UP| HOME  | PG_DN |  END  | PG_UP |        |
// |        | SHIFT | CTRL  |  ALT  |  GUI  | BRI_DN|     | VOL_DN| LEFT  | DOWN  | RIGHT | PG_DN |        |
// |  BTCLR |  BT1  |  BT2  |  BT3  |  BT4  |  BT5  |     | KCMUTE| KC_SPC| KC_ENT| QWERTY|COLEMAK|        |
//                          |       |       |       |     |       |       |       |
                        bindings = <
 &trans     &bt BT_CLR   &trans       &kp SLCK     &kp PAUSE_BREAK &kp C_BRI_UP    &kp C_VOL_UP &kp HOME  &kp UP    &kp PG_UP   &kp PG_UP    &trans
 &trans     &kp LSHFT    &kp LCTRL    &kp LALT     &kp LGUI        &kp C_BRI_DN    &kp C_VOL_DN &kp LEFT  &kp DOWN  &kp RIGHT   &kp PG_DN    &trans
 &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3    &bt BT_SEL 4    &kp K_MUTE   &kp SPACE &kp RET   &tog QWERTY &tog COLEMAK &trans
                                        &trans       &trans          &trans          &trans       &trans    &trans
                        >;
                };
        };
};
